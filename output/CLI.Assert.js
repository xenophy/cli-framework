Ext.data.JsonP.CLI_Assert({"tagname":"class","name":"CLI.Assert","autodetected":{},"files":[{"filename":"Assert.js","href":"Assert.html#CLI-Assert"}],"singleton":true,"members":[{"name":"falsey","tagname":"method","owner":"CLI.Assert","id":"method-falsey","meta":{}},{"name":"falseyProp","tagname":"method","owner":"CLI.Assert","id":"method-falseyProp","meta":{}},{"name":"truthy","tagname":"method","owner":"CLI.Assert","id":"method-truthy","meta":{}},{"name":"truthyProp","tagname":"method","owner":"CLI.Assert","id":"method-truthyProp","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-CLI.Assert","short_doc":"This class provides help value testing methods useful for diagnostics. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Assert.html#CLI-Assert' target='_blank'>Assert.js</a></div></pre><div class='doc-contents'><p>This class provides help value testing methods useful for diagnostics. These are often\nused in <code>debugHooks</code>:</p>\n\n<pre><code> <a href=\"#!/api/CLI-method-define\" rel=\"CLI-method-define\" class=\"docClass\">CLI.define</a>('Foo.bar.Class', {\n\n     debugHooks: {\n         method: function (a) {\n             CLI.AsserisNotDefinedPropt.truthy(a, 'Expected \"a\" to be truthy\");\n         },\n\n         foo: function (object) {\n             CLI.Assert.isFunctionProp(object, 'doSomething');\n         }\n     }\n });\n</code></pre>\n\n<p><strong>NOTE:</strong> This class is entirely removed in production builds so all uses of it should\nbe either in <code>debug</code> conditional comments or <code>debugHooks</code>.</p>\n\n<p>The following type detection methods from the <code>CLI</code> object are wrapped as assertions\nby this class:</p>\n\n<ul>\n<li><code>isEmpty</code></li>\n<li><code>isArray</code></li>\n<li><code>isDate</code></li>\n<li><code>isObject</code></li>\n<li><code>isSimpleObject</code></li>\n<li><code>isPrimitive</code></li>\n<li><code>isFunction</code></li>\n<li><code>isNumber</code></li>\n<li><code>isNumeric</code></li>\n<li><code>isString</code></li>\n<li><code>isBoolean</code></li>\n<li><code>isElement</code></li>\n<li><code>isTextNode</code></li>\n<li><code>isDefined</code></li>\n<li><code>isIterable</code></li>\n</ul>\n\n\n<p>These appear both their exact name and with a \"Prop\" suffix for checking a property on\nan object. For example, these are almost identical:</p>\n\n<pre><code> CLI.Assert.isFunction(object.foo);\n\n CLI.Assert.isFunctionProp(object, 'foo');\n</code></pre>\n\n<p>The difference is the default error message generated is better in the second use case\nthan the first.</p>\n\n<p>The above list are also expanded for \"Not\" flavors (and \"Not...Prop\"):</p>\n\n<ul>\n<li><code>isNotEmpty</code></li>\n<li><code>isNotArray</code></li>\n<li><code>isNotDate</code></li>\n<li><code>isNotObject</code></li>\n<li><code>isNotSimpleObject</code></li>\n<li><code>isNotPrimitive</code></li>\n<li><code>isNotFunction</code></li>\n<li><code>isNotNumber</code></li>\n<li><code>isNotNumeric</code></li>\n<li><code>isNotString</code></li>\n<li><code>isNotBoolean</code></li>\n<li><code>isNotElement</code></li>\n<li><code>isNotTextNode</code></li>\n<li><code>isNotDefined</code></li>\n<li><code>isNotIterable</code></li>\n</ul>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-falsey' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Assert'>CLI.Assert</span><br/><a href='source/Assert.html#CLI-Assert-method-falsey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Assert-method-falsey' class='name expandable'>falsey</a>( <span class='pre'>b, msg</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks that the first argument is falsey and throws an Error if it is not. ...</div><div class='long'><p>Checks that the first argument is falsey and throws an <code>Error</code> if it is not.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>msg</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-falseyProp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Assert'>CLI.Assert</span><br/><a href='source/Assert.html#CLI-Assert-method-falseyProp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Assert-method-falseyProp' class='name expandable'>falseyProp</a>( <span class='pre'>object, property</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks that the first argument is falsey and throws an Error if it is not. ...</div><div class='long'><p>Checks that the first argument is falsey and throws an <code>Error</code> if it is not.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>property</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-truthy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Assert'>CLI.Assert</span><br/><a href='source/Assert.html#CLI-Assert-method-truthy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Assert-method-truthy' class='name expandable'>truthy</a>( <span class='pre'>b, msg</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks that the first argument is truthy and throws an Error if it is not. ...</div><div class='long'><p>Checks that the first argument is truthy and throws an <code>Error</code> if it is not.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>msg</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-truthyProp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Assert'>CLI.Assert</span><br/><a href='source/Assert.html#CLI-Assert-method-truthyProp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Assert-method-truthyProp' class='name expandable'>truthyProp</a>( <span class='pre'>object, property</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks that the first argument is truthy and throws an Error if it is not. ...</div><div class='long'><p>Checks that the first argument is truthy and throws an <code>Error</code> if it is not.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>property</span> : Object<div class='sub-desc'></div></li></ul></div></div></div></div></div></div></div>","meta":{}});