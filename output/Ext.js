Ext.data.JsonP.Ext({"tagname":"class","name":"Ext","alternateClassNames":[],"members":[{"name":"iterate","tagname":"method","owner":"Ext","id":"method-iterate","meta":{}},{"name":"typeOf","tagname":"method","owner":"Ext","id":"method-typeOf","meta":{}}],"aliases":{},"files":[{"filename":"","href":""}],"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-iterate' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Util.html#Ext-method-iterate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-iterate' class='name expandable'>iterate</a>( <span class='pre'>object, fn, [scope]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Iterates either an array or an object. ...</div><div class='long'><p>Iterates either an array or an object. This method delegates to\nCLI.Array.each if the given value is iterable, and CLI.Object.each otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object/Array<div class='sub-desc'><p>The object or array to be iterated.</p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>The function to be called for each iteration. See and CLI.Array.each and\nCLI.Object.each for detailed lists of arguments passed to this function depending on the given object\ntype that is being iterated.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the specified function is executed.\nDefaults to the object being iterated itself.</p>\n</div></li></ul></div></div></div><div id='method-typeOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Util.html#Ext-method-typeOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-typeOf' class='name expandable'>typeOf</a>( <span class='pre'>value</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the type of the given variable in string format. ...</div><div class='long'><p>Returns the type of the given variable in string format. List of possible values are:</p>\n\n<ul>\n<li><code>undefined</code>: If the given value is <code>undefined</code></li>\n<li><code>null</code>: If the given value is <code>null</code></li>\n<li><code>string</code>: If the given value is a string</li>\n<li><code>number</code>: If the given value is a number</li>\n<li><code>boolean</code>: If the given value is a boolean value</li>\n<li><code>date</code>: If the given value is a <code>Date</code> object</li>\n<li><code>function</code>: If the given value is a function reference</li>\n<li><code>object</code>: If the given value is an object</li>\n<li><code>array</code>: If the given value is an array</li>\n<li><code>regexp</code>: If the given value is a regular expression</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});