Ext.data.JsonP.global({"tagname":"class","name":"global","alternateClassNames":[],"members":[{"name":"compiled","tagname":"cfg","owner":"global","id":"cfg-compiled","meta":{}},{"name":"disableFormats","tagname":"cfg","owner":"global","id":"cfg-disableFormats","meta":{}},{"name":"listeners","tagname":"cfg","owner":"global","id":"cfg-listeners","meta":{}},{"name":"","tagname":"property","owner":"global","id":"property-","meta":{}},{"name":"hasListeners","tagname":"property","owner":"global","id":"property-hasListeners","meta":{"readonly":true}},{"name":"isTemplate","tagname":"property","owner":"global","id":"property-isTemplate","meta":{}},{"name":"re","tagname":"property","owner":"global","id":"property-re","meta":{"private":true}},{"name":"constructor","tagname":"method","owner":"global","id":"method-constructor","meta":{}},{"name":"addAfterListener","tagname":"method","owner":"global","id":"method-addAfterListener","meta":{}},{"name":"addBeforeListener","tagname":"method","owner":"global","id":"method-addBeforeListener","meta":{}},{"name":"addListener","tagname":"method","owner":"global","id":"method-addListener","meta":{}},{"name":"apply","tagname":"method","owner":"global","id":"method-apply","meta":{}},{"name":"applyOut","tagname":"method","owner":"global","id":"method-applyOut","meta":{}},{"name":"changeListener","tagname":"method","owner":"global","id":"method-changeListener","meta":{"private":true}},{"name":"clearListeners","tagname":"method","owner":"global","id":"method-clearListeners","meta":{}},{"name":"compile","tagname":"method","owner":"global","id":"method-compile","meta":{}},{"name":"createEventRelayer","tagname":"method","owner":"global","id":"method-createEventRelayer","meta":{"private":true}},{"name":"doAddListener","tagname":"method","owner":"global","id":"method-doAddListener","meta":{"private":true}},{"name":"fireAction","tagname":"method","owner":"global","id":"method-fireAction","meta":{}},{"name":"fireEvent","tagname":"method","owner":"global","id":"method-fireEvent","meta":{}},{"name":"fireEventArgs","tagname":"method","owner":"global","id":"method-fireEventArgs","meta":{}},{"name":"functionFactory","tagname":"method","owner":"global","id":"method-functionFactory","meta":{"private":true}},{"name":"getId","tagname":"method","owner":"global","id":"method-getId","meta":{}},{"name":"getListeners","tagname":"method","owner":"global","id":"method-getListeners","meta":{}},{"name":"hasListener","tagname":"method","owner":"global","id":"method-hasListener","meta":{}},{"name":"isSuspended","tagname":"method","owner":"global","id":"method-isSuspended","meta":{}},{"name":"on","tagname":"method","owner":"global","id":"method-on","meta":{}},{"name":"onAfter","tagname":"method","owner":"global","id":"method-onAfter","meta":{}},{"name":"onBefore","tagname":"method","owner":"global","id":"method-onBefore","meta":{}},{"name":"relayEvent","tagname":"method","owner":"global","id":"method-relayEvent","meta":{"private":true}},{"name":"relayEvents","tagname":"method","owner":"global","id":"method-relayEvents","meta":{"chainable":true}},{"name":"removeAfterListener","tagname":"method","owner":"global","id":"method-removeAfterListener","meta":{}},{"name":"removeBeforeListener","tagname":"method","owner":"global","id":"method-removeBeforeListener","meta":{}},{"name":"removeListener","tagname":"method","owner":"global","id":"method-removeListener","meta":{}},{"name":"resolveListenerScope","tagname":"method","owner":"global","id":"method-resolveListenerScope","meta":{"protected":true}},{"name":"resumeEvent","tagname":"method","owner":"global","id":"method-resumeEvent","meta":{}},{"name":"resumeEvents","tagname":"method","owner":"global","id":"method-resumeEvents","meta":{}},{"name":"set","tagname":"method","owner":"global","id":"method-set","meta":{}},{"name":"setListeners","tagname":"method","owner":"global","id":"method-setListeners","meta":{}},{"name":"suspendEvent","tagname":"method","owner":"global","id":"method-suspendEvent","meta":{}},{"name":"suspendEvents","tagname":"method","owner":"global","id":"method-suspendEvents","meta":{}},{"name":"un","tagname":"method","owner":"global","id":"method-un","meta":{}},{"name":"unAfter","tagname":"method","owner":"global","id":"method-unAfter","meta":{}},{"name":"unBefore","tagname":"method","owner":"global","id":"method-unBefore","meta":{}}],"aliases":{},"files":[{"filename":"","href":""}],"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'><p>Global variables and functions.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-compiled' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Template.html#global-cfg-compiled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-cfg-compiled' class='name expandable'>compiled</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>True to immediately compile the template. ...</div><div class='long'><p>True to immediately compile the template. Defaults to false.</p>\n</div></div></div><div id='cfg-disableFormats' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Template.html#global-cfg-disableFormats' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-cfg-disableFormats' class='name expandable'>disableFormats</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>True to disable format functions in the template. ...</div><div class='long'><p>True to disable format functions in the template. If the template doesn't contain\nformat functions, setting disableFormats to true will reduce apply time. Defaults to false.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-listeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-cfg-listeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-cfg-listeners' class='name expandable'>listeners</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>A config object containing one or more event handlers to be added to this object during initialization. ...</div><div class='long'><p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners <code>config</code> object as specified in the <a href=\"#!/api/global-method-addListener\" rel=\"global-method-addListener\" class=\"docClass\">addListener</a> example for attaching\nmultiple handlers at once.</p>\n\n<p>See the <a href=\"#!/guide/events\">Event guide</a> for more</p>\n\n<p><strong>Note:</strong> It is bad practice to specify a listener's <code>config</code> when you are defining a class using <code><a href=\"#!/api/CLI-method-define\" rel=\"CLI-method-define\" class=\"docClass\">CLI.define</a>()</code>.\nInstead, only specify listeners when you are instantiating your class with <code><a href=\"#!/api/CLI-method-create\" rel=\"CLI-method-create\" class=\"docClass\">CLI.create</a>()</code>.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Template.html#global-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-' class='name expandable'></a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Represents an HTML fragment template. ...</div><div class='long'><p>Represents an HTML fragment template. Templates may be <a href=\"#!/api/global-method-compile\" rel=\"global-method-compile\" class=\"docClass\">precompiled</a> for greater performance.</p>\n\n<p>An instance of this class may be created by passing to the constructor either a single argument, or multiple\narguments:</p>\n\n<h1>Single argument: String/Array</h1>\n\n<p>The single argument may be either a String or an Array:</p>\n\n<ul>\n<li><p>String:</p>\n\n<pre><code>var t = new <a href=\"#!/api/CLI.Template\" rel=\"CLI.Template\" class=\"docClass\">CLI.Template</a>(\"&lt;div&gt;Hello {0}.&lt;/div&gt;\");\nt.append('some-element', ['foo']);\n</code></pre></li>\n<li><p>Array:</p>\n\n<p>An Array will be combined with <code>join('')</code>.</p>\n\n<pre><code>var t = new <a href=\"#!/api/CLI.Template\" rel=\"CLI.Template\" class=\"docClass\">CLI.Template</a>([\n    '&lt;div name=\"{id}\"&gt;',\n        '&lt;span class=\"{cls}\"&gt;{name:trim} {value:ellipsis(10)}&lt;/span&gt;',\n    '&lt;/div&gt;',\n]);\nt.<a href=\"#!/api/global-method-compile\" rel=\"global-method-compile\" class=\"docClass\">compile</a>();\nt.append('some-element', {id: 'myid', cls: 'myclass', name: 'foo', value: 'bar'});\n</code></pre></li>\n</ul>\n\n\n<h1>Multiple arguments: String, Object, Array, ...</h1>\n\n<p>Multiple arguments will be combined with <code>join('')</code>.</p>\n\n<pre><code>var t = new <a href=\"#!/api/CLI.Template\" rel=\"CLI.Template\" class=\"docClass\">CLI.Template</a>(\n    '&lt;div name=\"{id}\"&gt;',\n        '&lt;span class=\"{cls}\"&gt;{name} {value}&lt;/span&gt;',\n    '&lt;/div&gt;',\n    // a configuration object:\n    {\n        compiled: true,      // <a href=\"#!/api/global-method-compile\" rel=\"global-method-compile\" class=\"docClass\">compile</a> immediately\n    }\n);\n</code></pre>\n\n<h1>Notes</h1>\n\n<ul>\n<li>For a list of available format functions, see <a href=\"#!/api/CLI.util.Format\" rel=\"CLI.util.Format\" class=\"docClass\">CLI.util.Format</a>.</li>\n<li><code>disableFormats</code> reduces <code><a href=\"#!/api/global-method-apply\" rel=\"global-method-apply\" class=\"docClass\">apply</a></code> time when no formatting is required.</li>\n</ul>\n\n</div></div></div><div id='property-hasListeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-property-hasListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-hasListeners' class='name expandable'>hasListeners</a> : Object<span class=\"signature\"><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>This object holds a key for any event that has a listener. ...</div><div class='long'><p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class or\non the MVC EventBus. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n</div></div></div><div id='property-isTemplate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Template.html#global-property-isTemplate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-isTemplate' class='name expandable'>isTemplate</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>true in this class to identify an object as an instantiated Template, or subclass thereof. ...</div><div class='long'><p><code>true</code> in this class to identify an object as an instantiated Template, or subclass thereof.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-re' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Template.html#global-property-re' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-property-re' class='name expandable'>re</a> : RegExp<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Regular expression used to extract tokens. ...</div><div class='long'><p>Regular expression used to extract tokens.</p>\n\n<p>Finds the following expressions within a format string</p>\n\n<pre><code>                {AND?}\n                /   \\\n              /       \\\n            /           \\\n          /               \\\n       OR                  AND?\n      /  \\                 / \\\n     /    \\               /   \\\n    /      \\             /     \\\n</code></pre>\n\n<p>   (\\d+)  ([a-z<em>][\\w-]*)   /       \\\n    index       name       /         \\\n                          /           \\\n                         /             \\\n                  :([a-z</em>.]<em>)   (?:((.</em>?)?))?\n                     formatFn           args</p>\n\n<p>Numeric index or (name followed by optional formatting function and args)</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Template.html#global-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/global-method-constructor' class='name expandable'>global</a>( <span class='pre'>html, [config]</span> ) : <a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates new template. ...</div><div class='long'><p>Creates new template.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>html</span> : String...<div class='sub-desc'><p>List of strings to be concatenated into template.\nAlternatively an array of strings can be given, but then no config object may be passed.</p>\n</div></li><li><span class='pre'>config</span> : Object (optional)<div class='sub-desc'><p>Config object</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-addAfterListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-addAfterListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-addAfterListener' class='name expandable'>addAfterListener</a>( <span class='pre'>eventName, fn, [scope], [options]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends an after-event handler. ...</div><div class='long'><p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/global-method-addListener\" rel=\"global-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String/String[]/Object<div class='sub-desc'><p>The name of the event to listen for.</p>\n</div></li><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The method the event invokes.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for <code>fn</code>.</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration.</p>\n</div></li></ul></div></div></div><div id='method-addBeforeListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-addBeforeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-addBeforeListener' class='name expandable'>addBeforeListener</a>( <span class='pre'>eventName, fn, [scope], [options]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends a before-event handler. ...</div><div class='long'><p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/global-method-addListener\" rel=\"global-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String/String[]/Object<div class='sub-desc'><p>The name of the event to listen for.</p>\n</div></li><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The method the event invokes.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for <code>fn</code>.</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration.</p>\n</div></li></ul></div></div></div><div id='method-addListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-addListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-addListener' class='name expandable'>addListener</a>( <span class='pre'>eventName, fn, [scope], [options], [order]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends an event handler to this object. ...</div><div class='long'><p>Appends an event handler to this object. You can review the available handlers by looking at the 'events'\nsection of the documentation for the component you are working with.</p>\n\n<h2>Combining Options</h2>\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n<p>A delayed, one-time listener:</p>\n\n<pre><code>container.addListener('tap', this.handleTap, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n<h2>Attaching multiple handlers in 1 call</h2>\n\n<p>The method also allows for a single argument to be passed which is a config object containing properties which\nspecify multiple events. For example:</p>\n\n<pre><code>container.addListener({\n    tap  : this.onTap,\n    swipe: this.onSwipe,\n\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>container.addListener({\n    tap  : { fn: this.onTap, scope: this, single: true },\n    swipe: { fn: button.onSwipe, scope: button }\n});\n</code></pre>\n\n<p>See the <a href=\"#!/guide/events\">Events Guide</a> for more.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String/String[]/Object<div class='sub-desc'><p>The name of the event to listen for. May also be an object who's property names are\nevent names.</p>\n</div></li><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The method the event invokes.  Will be called with arguments given to\n<a href=\"#!/api/global-method-fireEvent\" rel=\"global-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If\nomitted, defaults to the object which fired the event.</strong></p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration.</p>\n\n<p>This object may contain any of the following properties:</p>\n<ul><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the handler function is executed. If omitted, defaults to the object\nwhich fired the event.</p>\n</div></li><li><span class='pre'>delay</span> : Number (optional)<div class='sub-desc'><p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n</div></li><li><span class='pre'>single</span> : Boolean (optional)<div class='sub-desc'><p><code>true</code> to add a handler to handle just the next firing of the event, and then remove itself.</p>\n</div></li><li><span class='pre'>order</span> : String (optional)<div class='sub-desc'><p>The order of when the listener should be added into the listener queue.</p>\n\n<p>If you set an order of <code>before</code> and the event you are listening to is preventable, you can return <code>false</code> and it will stop the event.</p>\n\n<p>Available options are <code>before</code>, <code>current</code> and <code>after</code>.</p>\n<p>Defaults to: <code>current</code></p></div></li><li><span class='pre'>buffer</span> : Number (optional)<div class='sub-desc'><p>Causes the handler to be delayed by the specified number of milliseconds. If the event fires again within that\ntime, the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n</div></li><li><span class='pre'>element</span> : String (optional)<div class='sub-desc'><p>If this observable is a Component, allows you to add\na listener onto a element of the component using the element's reference.</p>\n\n<pre><code><a href=\"#!/api/CLI-method-create\" rel=\"CLI-method-create\" class=\"docClass\">CLI.create</a>('CLI.Component', {\n    listeners: {\n        element: 'element',\n        tap: function() {\n            alert('element tap!');\n        }\n    }\n});\n</code></pre>\n\n<p>In Sencha Touch, All components have the <code>element</code> reference, which is the outer\nmost element of the component. CLI.Container also has the <code>innerElement</code>\nelement which contains all children. In most cases <code>element</code> is adequate.</p>\n</div></li><li><span class='pre'>delegate</span> : String (optional)<div class='sub-desc'><p>For Elements, a simple DOM selector to\nfilter the target or look for a descendant of the target.</p>\n\n<p>Sencha Touch Components can use CLI.ComponentQuery selectors to filter child Components.</p>\n\n<pre><code>// Create a container with a two children; a button and a toolbar\nvar container = <a href=\"#!/api/CLI-method-create\" rel=\"CLI-method-create\" class=\"docClass\">CLI.create</a>('CLI.Container', {\n    items: [\n        {\n            xtype: 'toolbar',\n            docked: 'top',\n            title: 'My Toolbar'\n        },\n        {\n           xtype: 'button',\n           text: 'My Button'\n        }\n    ]\n});\n\ncontainer.addListener({\n    // CLI.Buttons have an xtype of 'button', so we use that are a selector for our delegate\n    delegate: 'button',\n\n    tap: function() {\n        alert('Button tapped!');\n    }\n});\n</code></pre>\n</div></li><li><span class='pre'>capture</span> : Boolean<div class='sub-desc'><p><code>true</code> to initiate capture which will fire the\nlisteners on the target Element <em>before</em> any descendant Elements. Normal events\nstart with the target element and propagate upward to ancestor elements, whereas\ncaptured events propagate from the top of the DOM downward to descendant elements.\nThis option achieves the same result as the useCapture parameter in the standard\nJavaScript addEventListener method.</p>\n</div></li></ul></div></li><li><span class='pre'>order</span> : String (optional)<div class='sub-desc'><p>The order of when the listener should be added into the listener queue.\nPossible values are <code>before</code>, <code>current</code> and <code>after</code>.</p>\n<p>Defaults to: <code>&#39;current&#39;</code></p></div></li></ul></div></div></div><div id='method-apply' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Template.html#global-method-apply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-apply' class='name expandable'>apply</a>( <span class='pre'>values</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an HTML fragment of this template with the specified values applied. ...</div><div class='long'><p>Returns an HTML fragment of this template with the specified values applied.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>values</span> : Object/Array<div class='sub-desc'><p>The template values. Can be an array if your params are numeric:</p>\n\n<pre><code>var tpl = new <a href=\"#!/api/CLI.Template\" rel=\"CLI.Template\" class=\"docClass\">CLI.Template</a>('Name: {0}, Age: {1}');\ntpl.apply(['John', 25]);\n</code></pre>\n\n<p>or an object:</p>\n\n<pre><code>var tpl = new <a href=\"#!/api/CLI.Template\" rel=\"CLI.Template\" class=\"docClass\">CLI.Template</a>('Name: {name}, Age: {age}');\ntpl.apply({name: 'John', age: 25});\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The HTML fragment</p>\n</div></li></ul></div></div></div><div id='method-applyOut' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Template.html#global-method-applyOut' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-applyOut' class='name expandable'>applyOut</a>( <span class='pre'>values, out</span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends the result of this template to the provided output array. ...</div><div class='long'><p>Appends the result of this template to the provided output array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>values</span> : Object/Array<div class='sub-desc'><p>The template values. See <a href=\"#!/api/global-method-apply\" rel=\"global-method-apply\" class=\"docClass\">apply</a>.</p>\n</div></li><li><span class='pre'>out</span> : Array<div class='sub-desc'><p>The array to which output is pushed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>The given out array.</p>\n</div></li></ul></div></div></div><div id='method-changeListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-changeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-changeListener' class='name expandable'>changeListener</a>( <span class='pre'>actionFn, eventName, fn, scope, options, order</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>actionFn</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>eventName</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>fn</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>order</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-clearListeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-clearListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-clearListeners' class='name expandable'>clearListeners</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes all listeners for this object. ...</div><div class='long'><p>Removes all listeners for this object.</p>\n</div></div></div><div id='method-compile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Template.html#global-method-compile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-compile' class='name expandable'>compile</a>( <span class='pre'></span> ) : <a href=\"#!/api/CLI.Template\" rel=\"CLI.Template\" class=\"docClass\">CLI.Template</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Compiles the template into an internal function, eliminating the RegEx overhead. ...</div><div class='long'><p>Compiles the template into an internal function, eliminating the RegEx overhead.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/CLI.Template\" rel=\"CLI.Template\" class=\"docClass\">CLI.Template</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-createEventRelayer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-createEventRelayer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-createEventRelayer' class='name expandable'>createEventRelayer</a>( <span class='pre'>newName</span> ) : Function<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Creates an event handling function which re-fires the event from this object as the passed event name. ...</div><div class='long'><p>Creates an event handling function which re-fires the event from this object as the passed event name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newName</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-doAddListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-doAddListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-doAddListener' class='name expandable'>doAddListener</a>( <span class='pre'>name, fn, scope, options, order</span> ) : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>fn</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>order</span> : Object<div class='sub-desc'></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-fireAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-fireAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-fireAction' class='name expandable'>fireAction</a>( <span class='pre'>eventName, args, fn, scope</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires the specified event with the passed parameters and execute a function (action)\nat the end if there are no liste...</div><div class='long'><p>Fires the specified event with the passed parameters and execute a function (action)\nat the end if there are no listeners that return <code>false</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to fire.</p>\n</div></li><li><span class='pre'>args</span> : Array<div class='sub-desc'><p>Arguments to pass to handers.</p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>Action.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Scope of fn.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-fireEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-fireEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'>eventName, args</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList...</div><div class='long'><p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/global-method-addListener\" rel=\"global-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>The first argument is the name of the event. Every other argument passed will be available when you listen for\nthe event.</p>\n\n<h2>Example</h2>\n\n<p>Firstly, we set up a listener for our new event.</p>\n\n<pre><code>this.on('myevent', function(arg1, arg2, arg3, arg4, options, e) {\n    console.log(arg1); // true\n    console.log(arg2); // 2\n    console.log(arg3); // { test: 'foo' }\n    console.log(arg4); // 14\n    console.log(options); // the options added when adding the listener\n    console.log(e); // the event object with information about the event\n});\n</code></pre>\n\n<p>And then we can fire off the event.</p>\n\n<pre><code>this.fireEvent('myevent', true, 2, { test: 'foo' }, 14);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to fire.</p>\n</div></li><li><span class='pre'>args</span> : Object...<div class='sub-desc'><p>Variable number of parameters are passed to handlers.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns <code>false</code> if any of the handlers return <code>false</code>.</p>\n</div></li></ul></div></div></div><div id='method-fireEventArgs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-fireEventArgs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-fireEventArgs' class='name expandable'>fireEventArgs</a>( <span class='pre'>eventName, args</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires the specified event with the passed parameter list. ...</div><div class='long'><p>Fires the specified event with the passed parameter list.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to fire.</p>\n</div></li><li><span class='pre'>args</span> : Object[]<div class='sub-desc'><p>An array of parameters which are passed to handlers.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>returns false if any of the handlers return false otherwise it returns true.</p>\n</div></li></ul></div></div></div><div id='method-functionFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Util2.html#global-method-functionFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-functionFactory' class='name expandable'>functionFactory</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Identifiable.html#global-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the id of this component. ...</div><div class='long'><p>Retrieves the id of this component. Will autogenerate an id if one has not already been set.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>id</p>\n</div></li></ul></div></div></div><div id='method-getListeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-cfg-listeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-getListeners' class='name expandable'>getListeners</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of listeners. ...</div><div class='long'><p>Returns the value of <a href=\"#!/api/global-cfg-listeners\" rel=\"global-cfg-listeners\" class=\"docClass\">listeners</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-hasListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-hasListener' class='name expandable'>hasListener</a>( <span class='pre'>eventName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks to see if this object has any listeners for a specified event ...</div><div class='long'><p>Checks to see if this object has any listeners for a specified event</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to check for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the event is being listened for, else false</p>\n</div></li></ul></div></div></div><div id='method-isSuspended' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-isSuspended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-isSuspended' class='name expandable'>isSuspended</a>( <span class='pre'>[eventName]</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if all events, or a specific event, is suspended. ...</div><div class='long'><p>Checks if all events, or a specific event, is suspended.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String (optional)<div class='sub-desc'><p>The name of the specific event to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if events are suspended</p>\n</div></li></ul></div></div></div><div id='method-on' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-on' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-on' class='name expandable'>on</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias for addListener. ...</div><div class='long'><p>Alias for <a href=\"#!/api/global-method-addListener\" rel=\"global-method-addListener\" class=\"docClass\">addListener</a>.</p>\n</div></div></div><div id='method-onAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-onAfter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-onAfter' class='name expandable'>onAfter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias for addAfterListener. ...</div><div class='long'><p>Alias for <a href=\"#!/api/global-method-addAfterListener\" rel=\"global-method-addAfterListener\" class=\"docClass\">addAfterListener</a>.</p>\n</div></div></div><div id='method-onBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-onBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-onBefore' class='name expandable'>onBefore</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias for addBeforeListener. ...</div><div class='long'><p>Alias for <a href=\"#!/api/global-method-addBeforeListener\" rel=\"global-method-addBeforeListener\" class=\"docClass\">addBeforeListener</a>.</p>\n</div></div></div><div id='method-relayEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-relayEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-relayEvent' class='name expandable'>relayEvent</a>( <span class='pre'>args, fn, scope, options, order</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>fn</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>order</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-relayEvents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-relayEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-relayEvents' class='name expandable'>relayEvents</a>( <span class='pre'>object, events</span> ) : <a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Relays selected events from the specified Observable as if the events were fired by this. ...</div><div class='long'><p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>The Observable whose events this object is to relay.</p>\n</div></li><li><span class='pre'>events</span> : String/Array/Object<div class='sub-desc'><p>Array of event names to relay.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/global\" rel=\"global\" class=\"docClass\">global</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-removeAfterListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-removeAfterListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-removeAfterListener' class='name expandable'>removeAfterListener</a>( <span class='pre'>eventName, fn, [scope], [options]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a before-event handler. ...</div><div class='long'><p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/global-method-removeListener\" rel=\"global-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String/String[]/Object<div class='sub-desc'><p>The name of the event the handler was associated with.</p>\n</div></li><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The handler to remove.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for <code>fn</code>.</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Extra options object.</p>\n</div></li></ul></div></div></div><div id='method-removeBeforeListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-removeBeforeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-removeBeforeListener' class='name expandable'>removeBeforeListener</a>( <span class='pre'>eventName, fn, [scope], [options]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a before-event handler. ...</div><div class='long'><p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/global-method-removeListener\" rel=\"global-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String/String[]/Object<div class='sub-desc'><p>The name of the event the handler was associated with.</p>\n</div></li><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The handler to remove.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for <code>fn</code>.</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Extra options object.</p>\n</div></li></ul></div></div></div><div id='method-removeListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-removeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-removeListener' class='name expandable'>removeListener</a>( <span class='pre'>eventName, fn, [scope], [options], [order]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes an event handler. ...</div><div class='long'><p>Removes an event handler.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String/String[]/Object<div class='sub-desc'><p>The type of event the handler was associated with.</p>\n</div></li><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/global-method-addListener\" rel=\"global-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/global-method-addListener\" rel=\"global-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>Extra options object. See <a href=\"#!/api/global-method-addListener\" rel=\"global-method-addListener\" class=\"docClass\">addListener</a> for details.</p>\n</div></li><li><span class='pre'>order</span> : String (optional)<div class='sub-desc'><p>The order of the listener to remove.\nPossible values are <code>before</code>, <code>current</code> and <code>after</code>.</p>\n<p>Defaults to: <code>&#39;current&#39;</code></p></div></li></ul></div></div></div><div id='method-resolveListenerScope' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-resolveListenerScope' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-resolveListenerScope' class='name expandable'>resolveListenerScope</a>( <span class='pre'>[defaultScope]</span> ) : Object<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>This method determines the scope (the this pointer) of named listeners that have\nnot be given a specific scope. ...</div><div class='long'><p>This method determines the scope (the <code>this</code> pointer) of named listeners that have\nnot be given a specific scope. For example:</p>\n\n<pre><code> component.on({\n     click: 'onClick'\n });\n</code></pre>\n\n<p>The default implementation of this method returns this object. Components and other\nobservable objects that have natural hierarchies can override this method to pick\nthe desired scope using other means.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>defaultScope</span> : Object (optional)<div class='sub-desc'><p>The default scope to return if none is found.</p>\n<p>Defaults to: <code>this</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The object on which non-scoped, named listeners should be fired.</p>\n</div></li></ul></div></div></div><div id='method-resumeEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-resumeEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-resumeEvent' class='name expandable'>resumeEvent</a>( <span class='pre'>eventName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resumes firing of the named event(s). ...</div><div class='long'><p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/global-method-suspendEvent\" rel=\"global-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String...<div class='sub-desc'><p>Multiple event names to resume.</p>\n</div></li></ul></div></div></div><div id='method-resumeEvents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-resumeEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-resumeEvents' class='name expandable'>resumeEvents</a>( <span class='pre'>discardQueuedEvents</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resumes firing events (see suspendEvents). ...</div><div class='long'><p>Resumes firing events (see <a href=\"#!/api/global-method-suspendEvents\" rel=\"global-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>discardQueuedEvents</span> : Boolean<div class='sub-desc'><p>Pass as true to discard any queued events.</p>\n</div></li></ul></div></div></div><div id='method-set' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Template.html#global-method-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-set' class='name expandable'>set</a>( <span class='pre'>html, [compile]</span> ) : <a href=\"#!/api/CLI.Template\" rel=\"CLI.Template\" class=\"docClass\">CLI.Template</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the HTML used as the template and optionally compiles it. ...</div><div class='long'><p>Sets the HTML used as the template and optionally compiles it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>html</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>compile</span> : Boolean (optional)<div class='sub-desc'><p>True to compile the template.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/CLI.Template\" rel=\"CLI.Template\" class=\"docClass\">CLI.Template</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setListeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-cfg-listeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-setListeners' class='name expandable'>setListeners</a>( <span class='pre'>listeners</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the value of listeners. ...</div><div class='long'><p>Sets the value of <a href=\"#!/api/global-cfg-listeners\" rel=\"global-cfg-listeners\" class=\"docClass\">listeners</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listeners</span> : Object<div class='sub-desc'><p>The new value.</p>\n</div></li></ul></div></div></div><div id='method-suspendEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-suspendEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-suspendEvent' class='name expandable'>suspendEvent</a>( <span class='pre'>eventName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Suspends firing of the named event(s). ...</div><div class='long'><p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/global-method-resumeEvent\" rel=\"global-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String...<div class='sub-desc'><p>Multiple event names to suspend.</p>\n</div></li></ul></div></div></div><div id='method-suspendEvents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-suspendEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-suspendEvents' class='name expandable'>suspendEvents</a>( <span class='pre'>queueSuspended</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Suspends the firing of all events. ...</div><div class='long'><p>Suspends the firing of all events. (see <a href=\"#!/api/global-method-resumeEvents\" rel=\"global-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>queueSuspended</span> : Boolean<div class='sub-desc'><p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/global-method-resumeEvents\" rel=\"global-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n</div></li></ul></div></div></div><div id='method-un' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-un' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-un' class='name expandable'>un</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias for removeListener. ...</div><div class='long'><p>Alias for <a href=\"#!/api/global-method-removeListener\" rel=\"global-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n</div></div></div><div id='method-unAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-unAfter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-unAfter' class='name expandable'>unAfter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias for removeAfterListener. ...</div><div class='long'><p>Alias for <a href=\"#!/api/global-method-removeAfterListener\" rel=\"global-method-removeAfterListener\" class=\"docClass\">removeAfterListener</a>.</p>\n</div></div></div><div id='method-unBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/Observable.html#global-method-unBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-unBefore' class='name expandable'>unBefore</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Alias for removeBeforeListener. ...</div><div class='long'><p>Alias for <a href=\"#!/api/global-method-removeBeforeListener\" rel=\"global-method-removeBeforeListener\" class=\"docClass\">removeBeforeListener</a>.</p>\n</div></div></div></div></div></div></div>","meta":{}});