Ext.data.JsonP.CLI_Loader({"tagname":"class","name":"CLI.Loader","autodetected":{},"files":[{"filename":"Loader.js","href":"Loader.html#CLI-Loader"}],"singleton":true,"members":[{"name":"enabled","tagname":"cfg","owner":"CLI.Loader","id":"cfg-enabled","meta":{}},{"name":"paths","tagname":"cfg","owner":"CLI.Loader","id":"cfg-paths","meta":{}},{"name":"config","tagname":"property","owner":"CLI.Loader","id":"property-config","meta":{"private":true}},{"name":"hasFileLoadError","tagname":"property","owner":"CLI.Loader","id":"property-hasFileLoadError","meta":{"private":true}},{"name":"history","tagname":"property","owner":"CLI.Loader","id":"property-history","meta":{}},{"name":"isInHistory","tagname":"property","owner":"CLI.Loader","id":"property-isInHistory","meta":{"private":true}},{"name":"missingQueue","tagname":"property","owner":"CLI.Loader","id":"property-missingQueue","meta":{"private":true}},{"name":"requiresMap","tagname":"property","owner":"CLI.Loader","id":"property-requiresMap","meta":{"private":true}},{"name":"addClassPathMappings","tagname":"method","owner":"CLI.Loader","id":"method-addClassPathMappings","meta":{"chainable":true}},{"name":"addUsedClasses","tagname":"method","owner":"CLI.Loader","id":"method-addUsedClasses","meta":{"private":true}},{"name":"getConfig","tagname":"method","owner":"CLI.Loader","id":"method-getConfig","meta":{}},{"name":"getPath","tagname":"method","owner":"CLI.Loader","id":"method-getPath","meta":{}},{"name":"historyPush","tagname":"method","owner":"CLI.Loader","id":"method-historyPush","meta":{"private":true}},{"name":"loadScripts","tagname":"method","owner":"CLI.Loader","id":"method-loadScripts","meta":{"private":true}},{"name":"setConfig","tagname":"method","owner":"CLI.Loader","id":"method-setConfig","meta":{"chainable":true}},{"name":"setPath","tagname":"method","owner":"CLI.Loader","id":"method-setPath","meta":{"chainable":true}}],"alternateClassNames":[],"aliases":{},"id":"class-CLI.Loader","short_doc":"CLI.Loader is the heart of the new dynamic dependency loading capability in CLI Framework. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Loader.html#CLI-Loader' target='_blank'>Loader.js</a></div></pre><div class='doc-contents'><p><a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a> is the heart of the new dynamic dependency loading capability in CLI Framework. It is most commonly used\nvia the <a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a> shorthand. <a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a> supports both asynchronous and synchronous loading\napproaches, and leverage their advantages for the best development flow. We'll discuss about the pros and cons of each approach:</p>\n\n<h1>Asynchronous Loading</h1>\n\n<ul>\n<li><p>Advantages:</p>\n\n<ul>\n<li>Cross-domain</li>\n<li>No web server needed: you can run the application via the file system protocol (i.e: <code>file://path/to/your/index\n.html</code>)</li>\n<li>Best possible debugging experience: error messages come with the exact file name and line number</li>\n</ul>\n</li>\n<li><p>Disadvantages:</p>\n\n<ul>\n<li>Dependencies need to be specified before-hand</li>\n</ul>\n</li>\n</ul>\n\n\n<h3>Method 1: Explicitly include what you need:</h3>\n\n<pre><code>// Syntax\n<a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a>({String/Array} expressions);\n\n// Example: Single alias\n<a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a>('widget.window');\n\n// Example: Single class name\n<a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a>('CLI.window.Window');\n\n// Example: Multiple aliases / class names mix\n<a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a>(['widget.window', 'layout.border', 'CLI.data.Connection']);\n\n// Wildcards\n<a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a>(['widget.*', 'layout.*', 'CLI.data.*']);\n</code></pre>\n\n<h3>Method 2: Explicitly exclude what you don't need:</h3>\n\n<pre><code>// Syntax: Note that it must be in this chaining format.\n<a href=\"#!/api/CLI-method-exclude\" rel=\"CLI-method-exclude\" class=\"docClass\">CLI.exclude</a>({String/Array} expressions)\n   .require({String/Array} expressions);\n\n// Include everything except CLI.data.*\n<a href=\"#!/api/CLI-method-exclude\" rel=\"CLI-method-exclude\" class=\"docClass\">CLI.exclude</a>('CLI.data.*').require('*');\n\n// Include all widgets except widget.checkbox*,\n// which will match widget.checkbox, widget.checkboxfield, widget.checkboxgroup, etc.\n<a href=\"#!/api/CLI-method-exclude\" rel=\"CLI-method-exclude\" class=\"docClass\">CLI.exclude</a>('widget.checkbox*').require('widget.*');\n</code></pre>\n\n<h1>Synchronous Loading on Demand</h1>\n\n<ul>\n<li><p>Advantages:</p>\n\n<ul>\n<li>There's no need to specify dependencies before-hand, which is always the convenience of including ext-all.js\nbefore</li>\n</ul>\n</li>\n<li><p>Disadvantages:</p>\n\n<ul>\n<li>Not as good debugging experience since file name won't be shown (except in Firebug at the moment)</li>\n<li>Must be from the same domain due to XHR restriction</li>\n<li>Need a web server, same reason as above</li>\n</ul>\n</li>\n</ul>\n\n\n<p>There's one simple rule to follow: Instantiate everything with <a href=\"#!/api/CLI-method-create\" rel=\"CLI-method-create\" class=\"docClass\">CLI.create</a> instead of the <code>new</code> keyword</p>\n\n<pre><code><a href=\"#!/api/CLI-method-create\" rel=\"CLI-method-create\" class=\"docClass\">CLI.create</a>('widget.window', { ... }); // Instead of new CLI.window.Window({...});\n\n<a href=\"#!/api/CLI-method-create\" rel=\"CLI-method-create\" class=\"docClass\">CLI.create</a>('CLI.window.Window', {}); // Same as above, using full class name instead of alias\n\n<a href=\"#!/api/CLI-method-widget\" rel=\"CLI-method-widget\" class=\"docClass\">CLI.widget</a>('window', {}); // Same as above, all you need is the traditional `xtype`\n</code></pre>\n\n<p>Behind the scene, <a href=\"#!/api/CLI.ClassManager\" rel=\"CLI.ClassManager\" class=\"docClass\">CLI.ClassManager</a> will automatically check whether the given class name / alias has already\n existed on the page. If it's not, <a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a> will immediately switch itself to synchronous mode and automatic load the given\n class and all its dependencies.</p>\n\n<h1>Hybrid Loading - The Best of Both Worlds</h1>\n\n<p>It has all the advantages combined from asynchronous and synchronous loading. The development flow is simple:</p>\n\n<h3>Step 1: Start writing your application using synchronous approach.</h3>\n\n<p><a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a> will automatically fetch all dependencies on demand as they're needed during run-time. For example:</p>\n\n<pre><code>CLI.onReady(function(){\n    var window = <a href=\"#!/api/CLI-method-widget\" rel=\"CLI-method-widget\" class=\"docClass\">CLI.widget</a>('window', {\n        width: 500,\n        height: 300,\n        layout: {\n            type: 'border',\n            padding: 5\n        },\n        title: 'Hello Dialog',\n        items: [{\n            title: 'Navigation',\n            collapsible: true,\n            region: 'west',\n            width: 200,\n            html: 'Hello',\n            split: true\n        }, {\n            title: 'TabPanel',\n            region: 'center'\n        }]\n    });\n\n    window.show();\n})\n</code></pre>\n\n<h3>Step 2: Along the way, when you need better debugging ability, watch the console for warnings like these:</h3>\n\n<pre><code>[<a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a>] Synchronously loading 'CLI.window.Window'; consider adding <a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a>('CLI.window.Window') before your application's code\nClassManager.js:432\n[<a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a>] Synchronously loading 'CLI.layout.container.Border'; consider adding <a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a>('CLI.layout.container.Border') before your application's code\n</code></pre>\n\n<p>Simply copy and paste the suggested code above <code>CLI.onReady</code>, i.e:</p>\n\n<pre><code><a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a>('CLI.window.Window');\n<a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a>('CLI.layout.container.Border');\n\nCLI.onReady(...);\n</code></pre>\n\n<p>Everything should now load via asynchronous mode.</p>\n\n<h1>Deployment</h1>\n\n<p>It's important to note that dynamic loading should only be used during development on your local machines.\nDuring production, all dependencies should be combined into one single JavaScript file. <a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a> makes\nthe whole process of transitioning from / to between development / maintenance and production as easy as\npossible. Internally <a href=\"#!/api/CLI.Loader-property-history\" rel=\"CLI.Loader-property-history\" class=\"docClass\">CLI.Loader.history</a> maintains the list of all dependencies your application\nneeds in the exact loading sequence. It's as simple as concatenating all files in this array into one,\nthen include it on top of your application.</p>\n\n<p>This process will be automated with Sencha Command, to be released and documented towards CLI Framework Final.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-enabled' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-cfg-enabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-cfg-enabled' class='name expandable'>enabled</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether or not to enable the dynamic dependency loading feature. ...</div><div class='long'><p>Whether or not to enable the dynamic dependency loading feature.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-paths' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-cfg-paths' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-cfg-paths' class='name expandable'>paths</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>The mapping from namespaces to file paths\n\n{\n    'CLI': '.', // This is set by default, CLI.layout.container.Containe...</div><div class='long'><p>The mapping from namespaces to file paths</p>\n\n<pre><code>{\n    'CLI': '.', // This is set by default, CLI.layout.container.Container will be\n                // loaded from ./layout/Container.js\n\n    'My': './src/my_own_folder' // My.layout.Container will be loaded from\n                                // ./src/my_own_folder/layout/Container.js\n}\n</code></pre>\n\n<p>Note that all relative paths are relative to the current HTML document.\nIf not being specified, for example, <code>Other.awesome.Class</code> will simply be\nloaded from <code>\"./Other/awesome/Class.js\"</code>.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-config' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-property-config' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-property-config' class='name expandable'>config</a> : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'><p>Configuration</p>\n</div><div class='long'><p>Configuration</p>\n</div></div></div><div id='property-hasFileLoadError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-property-hasFileLoadError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-property-hasFileLoadError' class='name expandable'>hasFileLoadError</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-history' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-property-history' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-property-history' class='name expandable'>history</a> : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>An array of class names to keep track of the dependency loading order. ...</div><div class='long'><p>An array of class names to keep track of the dependency loading order.\nThis is not guaranteed to be the same everytime due to the asynchronous\nnature of the Loader.</p>\n</div></div></div><div id='property-isInHistory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-property-isInHistory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-property-isInHistory' class='name expandable'>isInHistory</a> : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-missingQueue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-property-missingQueue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-property-missingQueue' class='name expandable'>missingQueue</a> : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-requiresMap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-property-requiresMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-property-requiresMap' class='name expandable'>requiresMap</a> : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'><p>Map of fully qualified class names to an array of dependent classes.</p>\n</div><div class='long'><p>Map of fully qualified class names to an array of dependent classes.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addClassPathMappings' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-method-addClassPathMappings' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-method-addClassPathMappings' class='name expandable'>addClassPathMappings</a>( <span class='pre'>paths</span> ) : <a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Sets a batch of path entries ...</div><div class='long'><p>Sets a batch of path entries</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>paths</span> : Object <div class='sub-desc'><p>a set of className: path mappings</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-addUsedClasses' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-method-addUsedClasses' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-method-addUsedClasses' class='name expandable'>addUsedClasses</a>( <span class='pre'>classes</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Ensure that any classes referenced in the uses property are loaded. ...</div><div class='long'><p>Ensure that any classes referenced in the <code>uses</code> property are loaded.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>classes</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-getConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-method-getConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-method-getConfig' class='name expandable'>getConfig</a>( <span class='pre'>name</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the config value corresponding to the specified name. ...</div><div class='long'><p>Get the config value corresponding to the specified name. If no name is given, will return the config object</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The config property name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-method-getPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-method-getPath' class='name expandable'>getPath</a>( <span class='pre'>className</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Translates a className to a file path by adding the\nthe proper prefix and converting the .'s to /'s. ...</div><div class='long'><p>Translates a className to a file path by adding the\nthe proper prefix and converting the .'s to /'s. For example:</p>\n\n<pre><code><a href=\"#!/api/CLI.Loader-method-setPath\" rel=\"CLI.Loader-method-setPath\" class=\"docClass\">CLI.Loader.setPath</a>('My', '/path/to/My');\n\nalert(<a href=\"#!/api/CLI.Loader-method-getPath\" rel=\"CLI.Loader-method-getPath\" class=\"docClass\">CLI.Loader.getPath</a>('My.awesome.Class')); // alerts '/path/to/My/awesome/Class.js'\n</code></pre>\n\n<p>Note that the deeper namespace levels, if explicitly set, are always resolved first. For example:</p>\n\n<pre><code><a href=\"#!/api/CLI.Loader-method-setPath\" rel=\"CLI.Loader-method-setPath\" class=\"docClass\">CLI.Loader.setPath</a>({\n    'My': '/path/to/lib',\n    'My.awesome': '/other/path/for/awesome/stuff',\n    'My.awesome.more': '/more/awesome/path'\n});\n\nalert(<a href=\"#!/api/CLI.Loader-method-getPath\" rel=\"CLI.Loader-method-getPath\" class=\"docClass\">CLI.Loader.getPath</a>('My.awesome.Class')); // alerts '/other/path/for/awesome/stuff/Class.js'\n\nalert(<a href=\"#!/api/CLI.Loader-method-getPath\" rel=\"CLI.Loader-method-getPath\" class=\"docClass\">CLI.Loader.getPath</a>('My.awesome.more.Class')); // alerts '/more/awesome/path/Class.js'\n\nalert(<a href=\"#!/api/CLI.Loader-method-getPath\" rel=\"CLI.Loader-method-getPath\" class=\"docClass\">CLI.Loader.getPath</a>('My.cool.Class')); // alerts '/path/to/lib/cool/Class.js'\n\nalert(<a href=\"#!/api/CLI.Loader-method-getPath\" rel=\"CLI.Loader-method-getPath\" class=\"docClass\">CLI.Loader.getPath</a>('Unknown.strange.Stuff')); // alerts 'Unknown/strange/Stuff.js'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>path</p>\n</div></li></ul></div></div></div><div id='method-historyPush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-method-historyPush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-method-historyPush' class='name expandable'>historyPush</a>( <span class='pre'>className</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : String<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-loadScripts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-method-loadScripts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-method-loadScripts' class='name expandable'>loadScripts</a>( <span class='pre'>params</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>This is an internal method that delegate content loading to the\nbootstrap layer. ...</div><div class='long'><p>This is an internal method that delegate content loading to the\nbootstrap layer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-method-setConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-method-setConfig' class='name expandable'>setConfig</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Set the configuration for the loader. ...</div><div class='long'><p>Set the configuration for the loader. This should be called right after ext-(debug).js</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"ext-core-debug.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    <a href=\"#!/api/CLI.Loader-method-setConfig\" rel=\"CLI.Loader-method-setConfig\" class=\"docClass\">CLI.Loader.setConfig</a>({\n      enabled: true,\n      paths: {\n          'My': 'my_own_path'\n      }\n    });\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    <a href=\"#!/api/CLI-method-require\" rel=\"CLI-method-require\" class=\"docClass\">CLI.require</a>(...);\n\n    CLI.onReady(function() {\n      // application code here\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Refer to config options of <a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a> for the list of possible properties</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>The config object to override the default values</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='CLI.Loader'>CLI.Loader</span><br/><a href='source/Loader.html#CLI-Loader-method-setPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/CLI.Loader-method-setPath' class='name expandable'>setPath</a>( <span class='pre'>name, [path]</span> ) : <a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Sets the path of a namespace. ...</div><div class='long'><p>Sets the path of a namespace.\nFor Example:</p>\n\n<pre><code><a href=\"#!/api/CLI.Loader-method-setPath\" rel=\"CLI.Loader-method-setPath\" class=\"docClass\">CLI.Loader.setPath</a>('CLI', '.');\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String/Object<div class='sub-desc'><p>See <a href=\"#!/api/CLI.Function-method-flexSetter\" rel=\"CLI.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>path</span> : String (optional)<div class='sub-desc'><p>See <a href=\"#!/api/CLI.Function-method-flexSetter\" rel=\"CLI.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/CLI.Loader\" rel=\"CLI.Loader\" class=\"docClass\">CLI.Loader</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});